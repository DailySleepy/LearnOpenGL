#version 460 core
#extension GL_ARB_bindless_texture : require

layout(local_size_x = 16, local_size_y = 16) in;

layout(bindless_sampler) uniform sampler2D inputTexture;
//layout(binding = 1, rgba8) uniform image2D outputImage;
layout(bindless_image, rgba8) writeonly uniform image2D outputImage;

void main() {
	ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
	ivec2 size = textureSize(inputTexture, 0);
	vec2 normUV = vec2(uv) / vec2(size);

	if(uv.x < size.x && uv.y < size.y) {
		vec3 color = texture(inputTexture, normUV).rgb;
		float gray = dot(color, vec3(0.299, 0.587, 0.114));
		imageStore(outputImage, uv, vec4(vec3(gray), 1));
	}
}