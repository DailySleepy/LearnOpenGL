#version 460 core

layout(local_size_x = 16, local_size_y = 16) in;

layout(binding = 0, rgba8) uniform image2D inputImage;
layout(binding = 1, rgba8) uniform image2D outputImage;

vec3 toSRGB(vec3 linear) {
    vec3 low  = linear * 12.92;
    vec3 high = 1.055 * pow(linear, vec3(1.0 / 2.4)) - 0.055;
    bvec3 cutoff = lessThanEqual(linear, vec3(0.0031308));
    return mix(high, low, cutoff);
}

void main() {
    ivec2 uv = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(inputImage);

    if (uv.x < size.x && uv.y < size.y) {
        vec4 linearColor = imageLoad(inputImage, uv);
        vec3 srgbColor = toSRGB(linearColor.rgb);
        imageStore(outputImage, uv, vec4(srgbColor, linearColor.a));
    }
}
