#version 460 core
layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(std430, binding = 0) buffer DepthProjRangeBuffer { ivec2 depthProjRangeInt[]; };

layout(std140, binding = 0) uniform Matrices {
	mat4 projection;
	mat4 view;
};

uniform sampler2D depthTexture;

uniform vec2 screenSize;
uniform int tileSize;
uniform int tileCountX;

#define INT_MAX  2147438647
#define INT_MIN -2147438648

void main() {
	ivec2 pixel = ivec2(gl_GlobalInvocationID.xy);
	if(pixel.x >= screenSize.x || pixel.y >= screenSize.y) return;

	ivec2 tileId = pixel / tileSize;
	int tileIndex = tileId.y * tileCountX + tileId.x;

	float depth = (texelFetch(depthTexture, pixel, 0).r) * 2 - 1;
	if(depth >= 1) return;

	int depthInt = floatBitsToInt(depth);

	atomicMin(depthProjRangeInt[tileIndex][0], depthInt);
	atomicMax(depthProjRangeInt[tileIndex][1], depthInt);
}